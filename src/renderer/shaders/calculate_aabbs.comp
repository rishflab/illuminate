#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushBlock {
    uint start_idx;
    uint end_idx;
    uint mesh_id;
};

struct Aabb {
    vec4 min;
    vec4 max;
};

layout(binding = 0) buffer VertexOut {
    vec4 vertices[];
};

layout(std430, binding = 1) buffer BoundingBox {
    Aabb aabbs[];
};

void main() {

    Aabb aabb;

    vec4 min = vertices[start_idx];
    vec4 max = vertices[start_idx];

    for (uint i = start_idx + 1; i < end_idx; i++){

        if ( vertices[i].x < min.x ) min.x = vertices[i].x;
        if ( vertices[i].y < min.y ) min.y = vertices[i].y;
        if ( vertices[i].z < min.z ) min.z = vertices[i].z;

        if ( vertices[i].x > max.x ) max.x = vertices[i].x;
        if ( vertices[i].y > max.y ) max.y = vertices[i].y;
        if ( vertices[i].z > max.z ) max.z = vertices[i].z;
    }

    aabb.min = min;
    aabb.max = max;

    aabbs[mesh_id] = aabb;

}

